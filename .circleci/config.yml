# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
defaults: &defaults
  docker:
       - image: circleci/node:9.11
       
version: 2
jobs:
  build:
    <<: *defaults
    environment:
      CI: false
    steps:
      - checkout
      - run: git tag build-$CIRCLE_BUILD_NUM
      - run: git push --tags
      - attach_workspace:
          at: workspace

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          
      - run: sudo npm install -g babel-cli
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: bin/set-version build -n $CIRCLE_BUILD_NUM
      # run tests!
      - run: |
         sudo npm install -g react-scripts jest-cli
         yarn install
         yarn test
      
      - run: npm run build
      
      - run: tar -czvf workspace/build.tar.gz -C build .
      
      - persist_to_workspace:
          root: workspace
          paths:
             - build.tar.gz

      - store_artifacts:
          path: workspace/build.tar.gz

  deploy_dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace    
      - run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/config
          
          cat >> ~/.ssh/config  << EOF
          VerifyHostKeyDNS yes
          StrictHostKeyChecking no
          EOF
          
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "rm -rf /home/aim/build.tar.*"
          scp -P $SSH_PORT workspace/build.tar.gz $SSH_USER@$SSH_DEV_HOST:/home/aim
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "rm -rf /home/aim/aim-webapp/build"
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "mkdir -p /home/aim/aim-webapp/build"
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "tar xvC /home/aim/aim-webapp/build -f /home/aim/build.tar.gz"
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "sudo service nginx restart"
          ssh -p $SSH_PORT $SSH_USER@$SSH_DEV_HOST "mv build.tar.gz build.tar.gz.$CIRCLE_BUILD_NUM"

  deploy_qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace    
      - run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/config
          
          cat >> ~/.ssh/config  << EOF
          VerifyHostKeyDNS yes
          StrictHostKeyChecking no
          EOF
          
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "rm -rf /home/aim/build.tar.*"
          scp -P $SSH_PORT workspace/build.tar.gz $SSH_USER@$SSH_QA_HOST:/home/aim
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "rm -rf /home/aim/aim-webapp/build"
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "mkdir -p /home/aim/aim-webapp/build"
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "tar xvC /home/aim/aim-webapp/build -f /home/aim/build.tar.gz"
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "sudo service nginx restart"
          ssh -p $SSH_PORT $SSH_USER@$SSH_QA_HOST "mv build.tar.gz build.tar.gz.$CIRCLE_BUILD_NUM"
          
workflows:
   version: 2
   build-and-deploy:
       jobs:
         - build
         - deploy_dev:
             requires:
                - build
             filters:
               branches:
                 only: 
                  - master
                  - development
         - deploy_qa:
             requires:
                - build
             filters:
               branches:
                 only: /release_qa.*/
